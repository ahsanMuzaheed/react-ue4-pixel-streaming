{"version":3,"sources":["PixelWindow.js","index.js"],"names":["PixelWindow","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","myHandleResponseFunction","data","console","log","setState","buttonname","state","bind","assertThisInitialized","_this2","window","addResponseEventListener","addEventListener","setTimeout","load","removeResponseEventListener","react_default","a","createElement","id","className","React","Component","ReactDOM","render","src_PixelWindow","document","getElementById"],"mappings":"2MAuDeA,cAnDX,SAAAA,EAAYC,GAAM,IAAAC,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAAL,IACdE,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAH,GAAAQ,KAAAH,KAAMJ,KAOVQ,yBAA0B,SAACC,GACvBC,QAAQC,IAAIF,GACZC,QAAQC,IAAI,sBACZD,QAAQC,IAAI,uCACZD,QAAQC,IAAI,uBACZV,EAAKW,SAAS,CACVC,WAAWJ,KAZfR,EAAKa,MAAM,CACPD,WAAW,QAEfZ,EAAKO,yBAA2BP,EAAKO,yBAAyBO,KAA9Bb,OAAAc,EAAA,EAAAd,CAAAD,IALlBA,mFAkBC,IAAAgB,EAAAb,KACfM,QAAQC,IAAIP,MAEZc,OAAOC,yBAAyB,mBAAoBf,KAAKI,0BACzDE,QAAQC,IAAI,mBAEZO,OAAOE,iBAAiB,QAAS,WAAKH,EAAKT,yBAAyB,qBAIpEa,WAAW,WAAKJ,EAAKT,yBAAyB,yBAAyB,KACvEU,OAAOI,sDAKPJ,OAAOK,4BAA4B,oBACnCb,QAAQC,IAAI,oDAIZ,OACAa,EAAAC,EAAAC,cAAA,WACIF,EAAAC,EAAAC,cAAA,OAAKC,GAAI,SAASC,UAAU,eAE5BJ,EAAAC,EAAAC,cAAA,WACIF,EAAAC,EAAAC,cAAA,cAAStB,KAAKU,MAAMD,qBA7CVgB,IAAMC,WCIhCC,IAASC,OAAOR,EAAAC,EAAAC,cAACO,EAAD,MAAiBC,SAASC,eAAe","file":"static/js/main.61c512e8.chunk.js","sourcesContent":["import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\n\r\nclass PixelWindow extends React.Component{\r\n    constructor(props){\r\n        super(props);\r\n        this.state={\r\n            buttonname:\"test\",\r\n        };\r\n        this.myHandleResponseFunction = this.myHandleResponseFunction.bind(this);\r\n    }\r\n\r\n    myHandleResponseFunction =(data)=>{\r\n        console.log(data);\r\n        console.log(\"Response received!\");\r\n        console.log(\"you clicked pixelstreaming window!!\");\r\n        console.log(\"you will be happy!!\");\r\n        this.setState({\r\n            buttonname:data\r\n        });\r\n    }\r\n\r\n    componentDidMount(){\r\n        console.log(this);\r\n\r\n        window.addResponseEventListener(\"handle_responses\", this.myHandleResponseFunction);\r\n        console.log(\"atached handler\");\r\n        \r\n        window.addEventListener(\"click\", ()=>{this.myHandleResponseFunction(\"clickeddddd!!!!\")})\r\n\r\n        /* invokeテスト */\r\n        /* mountしたら5秒後にhandler呼ぶ */\r\n        setTimeout(()=>{this.myHandleResponseFunction(\"timeouted!!!!!!!!!!!\")},5000);\r\n        window.load();\r\n\r\n    }\r\n\r\n    componentWillUnmount(){\r\n        window.removeResponseEventListener(\"handle_responses\");\r\n        console.log(\"removed handler\");\r\n    }\r\n\r\n    render(){\r\n        return(\r\n        <div>\r\n            <div id =\"player\" className=\"fixed-size\" />\r\n             {/*<div id =\"player\" className=\"fixed-size\" onClick={()=>{this.myHandleResponseFunction()}}>False</div>*/}\r\n            <div>\r\n                <button>{this.state.buttonname}</button>\r\n            </div>\r\n        </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default PixelWindow;\r\n\r\n// let domContainer = document.querySelector('#pixelWindow');\r\n// ReactDOM.render(e(pixelWindow), domContainer);\r\n\r\n\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport PixelWindow from './PixelWindow'\n// import App from './App';\n// import * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<PixelWindow />, document.getElementById('root'));\n"],"sourceRoot":""}